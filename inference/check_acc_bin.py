import argparse
import torch
import numpy as np
import hashlib

def load_pt_as_numpy(pt_file):
    tensor = torch.load(pt_file, map_location=torch.device('cpu'))
    return tensor.cpu().numpy()

def read_binary_file(file_path, dtype=np.float32):
    return np.fromfile(file_path, dtype)

def compare_arrays(array1, array2):
    print("Using direct data comparison.")

    array1 = array1.reshape(array2.shape)

    if array1.shape != array2.shape:
        print("Shapes are different.")
        return
    
    diff = np.abs(array1 - array2)
    max_diff = np.max(diff)
    mean_diff = np.mean(diff)
    
    print(f"Max diff: {max_diff}, Mean diff: {mean_diff}")

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Compare two arrays.')
    parser.add_argument('--pt_file', type=str, required=True, help='Path to the .pt file')
    parser.add_argument('--bin_file', type=str, required=True, help='Path to the .bin file generated by C++')
    
    args = parser.parse_args()

    array_from_pt = load_pt_as_numpy(args.pt_file)
    array_from_onnx_bin = read_binary_file(args.bin_file)
    
    compare_arrays(array_from_pt, array_from_onnx_bin)